{
    "patches": [
        {
            "label": "2025-09-29_16-51-26",
            "content": "@@ -831,13 +831,8 @@\n etness%7D%22\n-%0A    \n",
            "lines": "34"
        },
        {
            "label": "2025-10-05_16-43-40",
            "content": "@@ -1,8 +1,9 @@\n+%0A\n class To\n@@ -142,24 +142,28 @@\n ss: int = 0%0A\n+    \n %0A    def get\n@@ -199,60 +199,169 @@\n     \n-return %7B%22P%22: 10, %22M%22: 20, %22G%22: 30%7D.get(self.size, 0)\n+if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0\n %0A%0A  \n@@ -454,17 +454,16 @@\n etness %3E\n-=\n  self.ge\n@@ -481,64 +481,8 @@\n ():%0A\n-            if self.wetness %3E self.getMaxWetness():%0A    \n     \n@@ -572,118 +572,8 @@\n     \n-    elif self.wetness %3E 0:%0A            # Para simular a sa%C3%ADda do teste, nada a imprimir aqui%0A            pass%0A\n %0A   \n@@ -622,24 +622,28 @@\n wetness = 0%0A\n+    \n %0A    def isD\n@@ -690,24 +690,25 @@\n tness == 0%0A%0A\n+%0A\n     def show\n@@ -741,987 +741,103 @@\n int(\n-f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22)%0A%0A%0A# ===========================%0A# C%C3%B3digo simulando os testes%0A# ===========================%0A%0A# Teste 1%0Atowel = Towel(%22azul%22, %22P%22)%0Atowel.show()        # Cor: azul, Tamanho: P, Umidade: 0%0Aprint(%22sim%22 if towel.isDry() else %22nao%22)  # sim%0A%0Atowel.dry(5)%0Atowel.show()        # Cor: azul, Tamanho: P, Umidade: 5%0Aprint(%22sim%22 if towel.isDry() else %22nao%22)  # nao%0A%0Atowel.dry(5)        # toalha encharcada%0Atowel.show()        # Cor: azul, Tamanho: P, Umidade: 10%0A%0Atowel.dry(5)        # toalha encharcada%0Atowel.show()        # Cor: azul, Tamanho: P, Umidade: 10%0A%0Atowel.wringOut()%0Atow\n+self)%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.color%7D %7Bs\n el\n+f\n .s\n-how()        # Cor: azul, Tamanho: P, Umidade: 0%0A%0A# Teste 2%0Atowel = Towel(%22verde%22, %22G%22)%0Atowel.show()        # Cor: verde, Tamanho: G, Umidade: 0%0A%0Atowel.dry(30)       # toalha encharcada%0Atowel.show()        # Cor: verde, Tamanho: G, Umidade: 30%0A%0Atowel.dry(1)        # toalha encharcada%0Atowel.show()        # Cor: verde, Tamanho: G, Umidade: 30\n+ize%7D %7Bself.wetness%7D%22%0A    \n",
            "lines": "35"
        },
        {
            "label": "2025-10-05_16-59-17",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n\n    def getMaxWetness(self) -> int:\n        return {\"P\": 10, \"M\": 20, \"G\": 30}.get(self.size, 0)\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            if self.wetness > self.getMaxWetness():\n                print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n        elif self.wetness > 0:\n            # Para simular a sa\u00edda do teste, nada a imprimir aqui\n            pass\n\n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n\n    def show(self) -> None:\n        print(f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\")\n\n\n# ===========================\n# C\u00f3digo simulando os testes\n# ===========================\n\n# Teste 1\ntowel = Towel(\"azul\", \"P\")\ntowel.show()        # Cor: azul, Tamanho: P, Umidade: 0\nprint(\"sim\" if towel.isDry() else \"nao\")  # sim\n\ntowel.dry(5)\ntowel.show()        # Cor: azul, Tamanho: P, Umidade: 5\nprint(\"sim\" if towel.isDry() else \"nao\")  # nao\n\ntowel.dry(5)        # toalha encharcada\ntowel.show()        # Cor: azul, Tamanho: P, Umidade: 10\n\ntowel.dry(5)        # toalha encharcada\ntowel.show()        # Cor: azul, Tamanho: P, Umidade: 10\n\ntowel.wringOut()\ntowel.show()        # Cor: azul, Tamanho: P, Umidade: 0\n\n# Teste 2\ntowel = Towel(\"verde\", \"G\")\ntowel.show()        # Cor: verde, Tamanho: G, Umidade: 0\n\ntowel.dry(30)       # toalha encharcada\ntowel.show()        # Cor: verde, Tamanho: G, Umidade: 30\n\ntowel.dry(1)        # toalha encharcada\ntowel.show()        # Cor: verde, Tamanho: G, Umidade: 30",
            "lines": "60"
        }
    ]
}