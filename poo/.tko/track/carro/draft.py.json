{
    "patches": [
        {
            "label": "2025-10-04_23-33-02",
            "content": "@@ -62,32 +62,63 @@\n sengers: int = 0\n+   # n%C3%BAmero de pessoas no carro\n %0A        self.pa\n@@ -119,23 +119,18 @@\n elf.\n-passMax\n+km\n : int = \n 2%0A  \n@@ -129,9 +129,45 @@\n t = \n-2\n+0           # quil%C3%B4metros percorridos\n %0A   \n@@ -176,26 +176,31 @@\n    self.\n-km\n+passMax\n : int = \n 0%0A      \n@@ -195,66 +195,158 @@\n t = \n-0%0A        self.gas: int = 0%0A        self.gasMax: int = 100\n+2      # limite de passageiros%0A        self.gas: int = 0          # combust%C3%ADvel atual%0A        self.gasMax: int = 100     # capacidade m%C3%A1xima do tanque\n %0A%0A  \n@@ -447,20 +447,16 @@\n lf.km%7D%22%0A\n-    \n %0A    def\n@@ -617,32 +617,24 @@\n  atingido%22)%0A\n-        \n %0A    def lea\n@@ -729,17 +729,16 @@\n    else:\n- \n %0A       \n@@ -747,38 +747,38 @@\n    print(%22fail: \n-N%C3%A3o h%C3%A1\n+nao ha\n  ninguem no carr\n@@ -781,24 +781,16 @@\n carro%22)%0A\n-        \n %0A    def\n@@ -840,16 +840,17 @@\n f amount\n+ \n %3C 0:%0A   \n@@ -1069,14 +1069,14 @@\n il: \n-N%C3%A3o h%C3%A1\n+nao ha\n  nin\n@@ -1323,55 +1323,40 @@\n     \n-print(f%22fail: tanque vazio ap%C3%B3s andar %7B\n+distancia_andada: int = \n self.gas\n %7D km\n@@ -1355,14 +1355,8 @@\n .gas\n-%7D km%22)\n %0A   \n@@ -1375,24 +1375,32 @@\n f.km += \n-self.gas\n+distancia_andada\n %0A       \n@@ -1417,16 +1417,91 @@\n gas = 0%0A\n+            print(f%22fail: tanque vazio apos andar %7Bdistancia_andada%7D km%22)%0A%0A\n %0Adef mai\n@@ -1533,16 +1533,21 @@\n Carro()%0A\n+    %0A\n     whil\n@@ -1562,20 +1562,42 @@\n         \n-line\n+try:%0A            line: str\n  = input\n@@ -1598,16 +1598,68 @@\n  input()\n+.strip()%0A        except EOFError:%0A            break%0A\n %0A       \n@@ -1697,34 +1697,8 @@\n nue%0A\n-%0A        print(f%22$%7Bline%7D%22)\n %0A   \n@@ -1746,12 +1746,37 @@\n arts\n- \n %5B0%5D\n+%0A        print(f%22$%7Bline%7D%22)\n %0A%0A  \n@@ -2023,101 +2023,172 @@\n     \n-carro.fuel(int(parts%5B1%5D))%0A        elif cmd == %22drive%22:%0A            carro.drive(int(parts%5B1%5D))\n+amount: int = int(parts%5B1%5D)%0A            carro.fuel(amount)%0A        elif cmd == %22drive%22:%0A            distance: int = int(parts%5B1%5D)%0A            carro.drive(distance)%0A\n %0A%0Aif\n",
            "lines": "81"
        },
        {
            "label": "2025-10-05_00-13-42",
            "content": "@@ -601,38 +601,38 @@\n    print(%22fail: \n-nao ha\n+N%C3%A3o h%C3%A1\n  ninguem no carr\n@@ -706,11 +706,9 @@\n ount\n- %3C=\n+%3C\n  0:%0A\n@@ -930,14 +930,14 @@\n il: \n-nao ha\n+N%C3%A3o h%C3%A1\n  nin\n@@ -1184,35 +1184,55 @@\n     \n-distancia_andada = \n+print(f%22fail: tanque vazio ap%C3%B3s andar %7B\n self.gas\n %0A   \n@@ -1227,16 +1227,22 @@\n self.gas\n+%7D km%22)\n %0A       \n@@ -1257,32 +1257,24 @@\n f.km += \n-distancia_andada\n+self.gas\n %0A       \n@@ -1294,82 +1294,8 @@\n  = 0\n-%0A            print(f%22fail: tanque vazio apos andar %7Bdistancia_andada%7D km%22)\n %0A%0Ade\n@@ -1488,16 +1488,17 @@\n  = parts\n+ \n %5B0%5D%0A%0A   \n@@ -1744,17 +1744,19 @@\n     \n-amount = \n+carro.fuel(\n int(\n@@ -1768,191 +1768,77 @@\n %5B1%5D)\n-%0A            carro.fuel(amount)  # usa a vari%C3%A1vel amount%0A        elif cmd == %22drive%22:%0A            distance = int(parts%5B1%5D)%0A            carro.drive(distance)  # usa a vari%C3%A1vel distance\n+)%0A        elif cmd == %22drive%22:%0A            carro.drive(int(parts%5B1%5D))\n %0A%0Aif\n",
            "lines": "71"
        },
        {
            "label": "2025-10-05_00-25-01",
            "content": "class Carro:\n    def __init__(self) -> None:\n        self.passengers: int = 0\n        self.passMax: int = 2\n        self.km: int = 0\n        self.gas: int = 0\n        self.gasMax: int = 100\n\n    def __str__(self) -> str:\n        return f\"pass: {self.passengers}, gas: {self.gas}, km: {self.km}\"\n    \n    def enter(self) -> None:\n        if self.passengers < self.passMax:\n            self.passengers += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n        \n    def leave(self) -> None:\n        if self.passengers > 0:\n            self.passengers -= 1\n        else: \n            print(\"fail: nao ha ninguem no carro\")\n        \n    def fuel(self, amount: int) -> None:\n        if amount <= 0:\n            return\n        self.gas += amount\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def drive(self, distance: int) -> None:\n        if self.passengers == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n        if self.gas >= distance:\n            self.km += distance\n            self.gas -= distance\n        else:\n            distancia_andada = self.gas\n            self.km += distancia_andada\n            self.gas = 0\n            print(f\"fail: tanque vazio apos andar {distancia_andada} km\")\n\ndef main() -> None:\n    carro = Carro()\n    while True:\n        line = input()\n        if not line:\n            continue\n\n        print(f\"${line}\")\n        parts = line.split()\n        cmd = parts[0]\n\n        if cmd == \"end\":\n            break\n        elif cmd == \"show\":\n            print(carro)\n        elif cmd == \"enter\":\n            carro.enter()\n        elif cmd == \"leave\":\n            carro.leave()\n        elif cmd == \"fuel\":\n            amount = int(parts[1])\n            carro.fuel(amount)  # usa a vari\u00e1vel amount\n        elif cmd == \"drive\":\n            distance = int(parts[1])\n            carro.drive(distance)  # usa a vari\u00e1vel distance\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "74"
        }
    ]
}