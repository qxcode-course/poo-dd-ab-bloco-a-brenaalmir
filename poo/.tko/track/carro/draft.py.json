{
    "patches": [
        {
            "label": "2025-10-04_23-33-02",
            "content": "class Carro:\n    def __init__(self) -> None:\n        self.passengers: int = 0   # n\u00famero de pessoas no carro\n        self.km: int = 0           # quil\u00f4metros percorridos\n        self.passMax: int = 2      # limite de passageiros\n        self.gas: int = 0          # combust\u00edvel atual\n        self.gasMax: int = 100     # capacidade m\u00e1xima do tanque\n\n    def __str__(self) -> str:\n        return f\"pass: {self.passengers}, gas: {self.gas}, km: {self.km}\"\n\n    def enter(self) -> None:\n        if self.passengers < self.passMax:\n            self.passengers += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self) -> None:\n        if self.passengers > 0:\n            self.passengers -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def fuel(self, amount: int) -> None:\n        if amount < 0:\n            return\n        self.gas += amount\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def drive(self, distance: int) -> None:\n        if self.passengers == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n        if self.gas >= distance:\n            self.km += distance\n            self.gas -= distance\n        else:\n            distancia_andada: int = self.gas\n            self.km += distancia_andada\n            self.gas = 0\n            print(f\"fail: tanque vazio apos andar {distancia_andada} km\")\n\n\ndef main() -> None:\n    carro = Carro()\n    \n    while True:\n        try:\n            line: str = input().strip()\n        except EOFError:\n            break\n\n        if not line:\n            continue\n\n        parts = line.split()\n        cmd = parts[0]\n        print(f\"${line}\")\n\n        if cmd == \"end\":\n            break\n        elif cmd == \"show\":\n            print(carro)\n        elif cmd == \"enter\":\n            carro.enter()\n        elif cmd == \"leave\":\n            carro.leave()\n        elif cmd == \"fuel\":\n            amount: int = int(parts[1])\n            carro.fuel(amount)\n        elif cmd == \"drive\":\n            distance: int = int(parts[1])\n            carro.drive(distance)\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "81"
        }
    ]
}